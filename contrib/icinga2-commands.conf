template CheckCommand "cloud_azure" {
    command = [ PluginDir + "/check_cloud_azure" ]

    arguments = {
        "-t" = {
            value = "$cloud_azure_timeout$"
            description = "Timeout for the check"
        }
        "--auth-file" = {
            value= "$cloud_azure_auth$"
            description = "Azure auth file (env:AZURE_AUTH_LOCATION)"
        }
        "--sub" = {
            value = "$cloud_azure_sub$"
            description = "Azure Subscription ID (env:AZURE_SUBSCRIPTION_ID)"
        }
    }
}

object CheckCommand "cloud_azure_vm" {
    import "cloud_azure"

    arguments += {
        "compute" = {
            value = "$cloud_azure_compute$"
            description = "Checks in the compute context"
        }
        "vm" {
            value = "$cloud_azure_vm$"
            description = "Checks a single Azure VM"
        }
        "-r" = {
            value = "$cloud_azure_group$"
            description = "Azure resource group"
        }
        "-n" = {
            value = "$cloud_azure_name$"
            description = " Look for vm by name"
        }
    }

    vars.cloud_azure_compute = "compute"
    vars.cloud_azure_vm = "vm"
}

object CheckCommand "cloud_azure_vms" {
    import "cloud_azure"

    arguments += {
        "compute" = {
            value = "$cloud_azure_compute$"
            description = "Checks in the compute context"
        }
        "vms" = {
            value = "cloud_azure_vms$"
            description = "Checks multiple Azure VMs in a resource group"
        }
        "-r" = {
            value = "$cloud_azure_group$"
            description = "Azure resource group"
        }
        "-n" = {
            value = "cloud_azure_tagname$"
            description = "Filter resource group by tag (e.g. tag1)"
        }
        "-v" = {
            value = "cloud_azure_tagvalue$"
            description = "Tag value of resource group (e.g. value1)"
        }
    }

    vars.cloud_azure_compute = "compute"
    vars.cloud_azure_vms = "vms"
}

apply Service "cloud_azure_single_vm" {
    import "generic-service"

    check_command = "cloud_azure_vm"

    vars.cloud_azure_name = "IcingaMaster"

    assign where host.name == NodeName
}

apply Service "cloud_azure_multiple_vms" {
    import "generic-service"

    check_command = "cloud_azure_vms"

    vars.cloud_azure_group = "ExampleResourceName"

    assign where host.name == NodeName
}
